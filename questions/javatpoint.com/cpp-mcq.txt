&[Index: 0
Question: #include<userdefined.h>
CodeBlock:

Options:
0 . #include<userdefined>
1 . #include "userdefined.h"
2 . <include> "userdefined.h"
3 . both a and b
4 . 
Correct Answer: 3

Explanation: To include the herder files in the C++ program user can use any of the following given syntax.#include <Filename.h>
Or#include "filename.h"


 Index: 1
Question: Which of the following is the correct syntax to print the message in C++ language?
CodeBlock:

Options:
0 . cout <<"hello world!";
1 . cout << hello world! ;
2 . out <<"hello world!;
3 . none of the above
4 . 
Correct Answer: 0

Explanation: To print the message in the C++ language user can use the following syntax:#include <iostream>
using namespace std;

int main() {
  cout << "Hello World!";
  cout << "I am learning C++";
  return 0;
}


 Index: 2
Question: Which of the following is the correct identifier?
CodeBlock:

Options:
0 . $var_name
1 . var_123
2 . [emailÂ protected]
3 . none of the above
4 . 
Correct Answer: 1

Explanation: There are some certain rules that must be followed by the users while writing the identifiers.
It may contain uppercase/lowercase letters, digits, and underscore (_) only.
It always starts only with non-digit characters.
It should not contain any special characters like $, @etc


 Index: 3
Question: Which of the following is the address operator?
CodeBlock:

Options:
0 . @
1 . #
2 . &
3 . %
4 . 
Correct Answer: 2

Explanation: To print the address of any variable, a user can use the "&" operator. To understand it more clearly, consider the following example:#include <iostream>
#include<conio.h>

using namespace std;

int main() {

   // Declare Variables
   int a;
   int *pt;

   cout << "C++ Pointer Example Program : Print Pointer Address\n";
   a = 10;
   pt = &a;

   cout << "\n[a  ]:Value of A = " << a;
   cout << "\n[*pt]:Value of A = " << *pt;
   cout << "\n[&a ]:Address of A = " << &a;
   cout << "\n[pt ]:Address of A = " << pt;
   cout << "\n[&pt]:Address of pt = " << &pt;
   cout << "\n[pt ]:Value of pt = " << pt;

   getch();
   return 0;
}


 Index: 4
Question: Which of the following features must be supported by any programming language to become a pure object-oriented programming language?
CodeBlock:

Options:
0 . encapsulation
1 . inheritance
2 . polymorphism
3 . all of the above
4 . 
Correct Answer: 3

Explanation: There is nothing that forces a user to use the OOP concept in C++. In contrast, it is necessary for a programming language that it must support all three features as encapsulation, inheritance, and polymorphism completely to become a pure Object-Oriented Language.

 Index: 5
Question: The programming language that has the ability to create new data types is called___.
CodeBlock:

Options:
0 . overloaded
1 . encapsulated
2 . reprehensible
3 . extensible
4 . 
Correct Answer: 3

Explanation: A language that can generate the new data types is known as the extensible languages as they can handle the new data types.

 Index: 6
Question: Which of the following is the original creator of the C++ language?
CodeBlock:

Options:
0 . dennis ritchie
1 . ken thompson
2 . bjarne stroustrup
3 . brian kernighan
4 . 
Correct Answer: 2

Explanation: Bjarne Stroustrup creates C++ language during 1997 at AT&T Bell Labs.

 Index: 7
Question: Which of the following is the correct syntax to read the single character to console in the C++ language?
CodeBlock:

Options:
0 . read ch()
1 . getline vh()
2 . get(ch)
3 . scanf(ch)
4 . 
Correct Answer: 2

Explanation: The "cin.get()" is one of the several functions provided in C++ language that is used to read the single or multiple characters to console. 

 Index: 8
Question: Which of the following statements is correct about the formal parameters in C++?
CodeBlock:

Options:
0 . parameters with which functions are called
1 . parameters which are used in the definition of the function
2 . variables other than passed parameters in a function
3 . variables that are never used in the function
4 . 
Correct Answer: 0

Explanation: Parameters that are used in the body of the function are known as formal parameters. These parameters represent the parameters passed to the function and are only used inside the function's body. 

 Index: 9
Question: The C++ language is ______ object-oriented language.
CodeBlock:

Options:
0 . pure object oriented
1 . not object oriented
2 . semi object-oriented or partial object-oriented
3 . none of the above
4 . 
Correct Answer: 2

Explanation:The common thing about the Pure Object-oriented language it provides three basic features like Inheritance, Encapsulation, and Polymorphism. Each programming language that supports these entire three features is known as the Pure-Object oriented language. Whereas if a programming language support all these three features but not support completely are known as the Partial-Object oriented languages or the Semi Object-oriented languagesThe main reasons why the C++ programming language is Known as Semi-Object oriented language are as follows:
Availability of the Friend function-
A friend class is allowed to access private and protected members of another class, within which it is declared a friend. It may be very useful for some time, but still, it violates the rule of the Object-Oriented features.
Concept of the Global variable-
As we all know that we can declare a global variable in C++ language that can be easily accessible from anywhere within the program. So again, C++ does not provide complete privacy because no one is restricted to access and manipulate that data/information. Hence it offers partial Encapsulation, unlike Java Language, in which a user only allows to declare a variable within the class and can provide access specifier to it.
The main function is Out-side the class-
C++ is an object-oriented language, but still, object-oriented is not fundamentally related (or implicit) to the language. So a user can easily write a valid, well-defined C++ code even without using any object once.


 Index: 10
Question: Which of the following features is required to be supported by the programming language to become a pure object-oriented programming language?
CodeBlock:

Options:
0 . encapsulation
1 . inheritance
2 . polymorphism
3 . all of the above
4 . 
Correct Answer: 3

Explanation: There is nothing that forces a user to use the OOP concept in C++. In contrast, it is necessary for a programming language that it must support all three features of Encapsulation, Inheritance, and Polymorphism completely to become a Pure Object-Oriented Language.

 Index: 11
Question: Which of the following comment syntax is correct to create a single-line comment in the C++ program?
CodeBlock:

Options:
0 . //comment
1 . /comment/
2 . comment//
3 . none of the above
4 . 
Correct Answer: 0

Explanation: To create a single line comment (or one-line comment) in C++ program one can use the "// write comment" syntax. We can understand it more easily with the help of following given Program:Example#include <stdio.h> 
int main(void) 
{ 
     // This is a single line comment 
    //  Welcome user comment 
    printf("Welcome to Javatpoint"); 
    return 0; 
} 
OutputWelcome to Javatpoint

 Index: 12
Question: C++ is a ___ type of language.
CodeBlock:

Options:
0 . high-level language
1 . low-level language
2 . middle-level language
3 . none of the above
4 . 
Correct Answer: 2

Explanation: C++ contains the features of both types of high and Low-level programming languages, and it is also not wrong if we call it the combination of both high and low-level languages.

 Index: 13
Question: For inserting a new line in C++ program, which one of the following statements can be used?
CodeBlock:

Options:
0 . \n
1 . \r
2 . \a
3 . none of the above
4 . 
Correct Answer: 0

Explanation:To insert a new line or to jump on to the next line, one can use the "\n." In c++, there is also an alternative is available that is " endl," which is also used for breaking a line in the output. Let see the example of both the "\n" and "endl."Example: Using "\n."#include <iostream>
using namespace std;

int main() {
  cout << "Hello World! \n\n";
  cout << "I am learning C++";
  return 0;
}
OutputHello World!
I am learning C++
Example: With using "end"#include <iostream>
using namespace std;

int main() {
  cout << "Hello World!" << endl;
  cout << "I am learning C++";
  return 0;
OutputHello World!
I am learning C++ 


 Index: 14
Question: Which one of the following represents the tab?
CodeBlock:

Options:
0 . \n
1 . \t
2 . \r
3 . none of the above
4 . 
Correct Answer: 1

Explanation: The "\t" is a type of space sequence representing the tab, which means a set of blank space adds to the line. To understand it more clearly, consider the following example:Program#include<iostream>
using namespace std;
int main()
{
int a,b;
cout<<"Enter the first number\t";
cin>>a;
cout<<"Enter the second number\t";
cin>>b;
if(a>b)
cout<<"Greatest number is\t"<<a;
else
cout<<"Greatest number is\t"<<b;
return 0;
}
OutputEnter the first number    12
Enter the second number    13
Greatest number is    13 


 Index: 15
Question: Which of the following refers to characteristics of an array?
CodeBlock:

Options:
0 . an array is a set of similar data items
1 . an array is a set of distinct data items
2 . an array can hold different types of datatypes
3 . none of the above
4 . 
Correct Answer: 0

Explanation: Basically, an array is a set of similar data items that are stored in the contiguous memory blocks. You can access any data item randomly using the index address of the element s.

 Index: 16
Question: If we stored five elements or data items in an array, what will be the index address or the index number of the array's last data item?
CodeBlock:

Options:
0 . 3
1 . 5
2 . 4
3 . 88
4 . 
Correct Answer: 2

Explanation: The array uses the contiguous block of memory for storing the data elements. Hence the data items pushed into an array are stored at the continuous address space. The index number of the array begins with zero so, the first data item pushed into the array will be stored at zero and so on. Hence index number of the last (fifth) element will be 4.

 Index: 17
Question: Which of the following is the correct syntax for declaring the array?
CodeBlock:

Options:
0 . init array []
1 . int array [5];
2 . array[5];
3 . none of the above
4 . 
Correct Answer: 1

Explanation: To declare an array in C++, we first need to specify its data type according to requirements such as int or char, afterward that the array's name and the size of the array. So the correct answer will be B.Example: Array declaration by specifying size and initializing elementsint arr[8] = { 10, 20, 30, 40 };The compiler will create an array of size 8, initializes the first four elements as specified by the user and rest elements as 0The above is just same as"int arr[] = {11, 22, 32, 44, 0, 0,0,0}".

 Index: 18
Question: Which of the following is the correct syntax for printing the address of the first element?
CodeBlock:

Options:
0 . array[0];
1 . array[1];
2 . array[2];
3 . none of the above
4 . 
Correct Answer: 0

Explanation: To print or access the first data item of the array, the correct syntax is "array[0];" because the array's index begins with zero instead of one. So the correct answer will be A.

 Index: 19
Question: Which of the following gives the 4th element of the array?
CodeBlock:

Options:
0 . array[0];
1 . array[0];
2 . array[3];
3 . none of the above
4 . 
Correct Answer: 2

Explanation: The index of the array begins with zero instead of 1. To print the 4th element of the array, the index number will be n-1 or (3); 

 Index: 20
Question: What is the output of the given program?
CodeBlock:
#include < stdio.h >
using namespace std;
int main()
{
int array[] = {10, 20, 30};
cout << -2[array];
return 0;
}

Options:
0 . -15
1 . -30
2 . compiler error
3 . garbage value
4 . 
Correct Answer: 1

Explanation: It will print the negative value of the specified values because the "-" sign we used while specifying the array elements. So the correct answer will be the "-30".

 Index: 21
Question: Which type of memory is used by an Array in C++ programming language?
CodeBlock:

Options:
0 . contiguous
1 . none-contiguous
2 . both a and b
3 . not mentioned
4 . 
Correct Answer: 0

Explanation: In the C and C++ programming language, the memory used by an array is usually contiguous, which means when an array is declared or initialized in the program a block of memory is selected form the memory space immediately. The major drawback of an array is that users have to guess the size of the array before actually using it, in which a significant amount of memory will be occupied even when it is not used. This later creates the problem of lack of memory.

 Index: 22
Question: Which of the following is the correct definition of sorting?
CodeBlock:

Options:
0 . sorting is a type of process in which the data or information is ordered into a specific order. example increasing orders, decreasing.
1 . sorting information or data only in increasing order
2 . sorting is a type of process in which data elements are modified or manipulated
3 . none of the above
4 . 
Correct Answer: 0

Explanation: Sorting is a type of technique or process in which the locations of data elements hold by the array are reordered or manipulated. So the correct answer will be A.For ExampleUn-sorted Array

4321567

Sorted Array

1234567



 Index: 23
Question: How many types of the array are there in the C++ programming language?
CodeBlock:

Options:
0 . in the c++ programming language, there are three types of arrays
1 . in the c++ programming language, there are four types of arrays
2 . in the c++ programming language, there are two types of arrays
3 . both a and b
4 . 
Correct Answer: 2

Explanation: In the C++ programming language, there are mainly two types of arrays that are Single Dimension arrays and Multi-Dimension arrays. In Single-Dimension arrays, the same types of values are hold in the form of a List, while on the other hand, in Multi-Dimension arrays; values are stored in the form of a matrix.

 Index: 24
Question: In C++, for what purpose the "rank()" is used?
CodeBlock:

Options:
0 . it returns the size of each dimension
1 . it returns the maximum number of elements that can be stored in the array
2 . it returns the dimension of the specified array
3 . none of the above
4 . 
Correct Answer: 2

Explanation: In C++, one can use the rank function where he wants to know about the dimensions( e.g., single-dimension, multi-dimension) of a specific array by just passing it to the "rank()" function.

 Index: 25
Question: Which one of the following is the correct definition of the "is_array();" function in C++?
CodeBlock:

Options:
0 . it checks that the specified variable is of the array or not
1 . it checks that the specified array of single dimension or not
2 . it checks that the array specified of multi-dimension or not
3 . both b and c
4 . 
Correct Answer: 0

Explanation: In C++, the "is_array();" is used for checking that the specified element or data item belongs to the array type or not.

 Index: 26
Question: Observer the given C++ program carefully and choose the correct output from the given options:
CodeBlock:
#include <iostream>
#include <string>
using namespace std;
int main()
{
	cout<<is_array<int>::value; // case A
	cout<<is_array<char[10]>::value; // case B
	cout<<is_array<string>::value;  // case c
	return 0;
}

Options:
0 . 110
1 . 001
2 . 010
3 . none of the above
4 . 
Correct Answer: 2

Explanation: The correct output will be "010" Because in both cases, A and C variables passed to the "is_array()" function are different, so the function returns zero in both cases while in the case of B, they are the same. Hence it returns one as the output.

 Index: 27
Question: Read the given C++ program carefully and choose the correct output from the given options:
CodeBlock:
#include <iostream>
#include <string>
using namespace std;
int main()
{
	cout<<rank<int[10]>::value; // Case A
	cout<<rank<char[10][10]>::value;   // Case B
	cout<<rank<string[10][10][10]>::value; //Case C
	return 0;
}

Options:
0 . 121
1 . 321
2 . 123
3 . 010
4 . 
Correct Answer: 2

Explanation: As we can see in the above program, here, the "rank()" function is used. The "rank()" function is used to know about the dimensions of the passed array. In case A the array passed to the "rank()" function is single-dimensional, In case B, the passed array is 2-dimensional, and in case C, the array passed is three-dimensional. So the output return by the "rank()" function is 123.

 Index: 28
Question: What did we call an array of the one-dimensional array?
CodeBlock:

Options:
0 . single dimensional array
1 . multi-dimensional array
2 . 2d array (or 2-dimensional array)
3 . both a and b
4 . 
Correct Answer: 2

Explanation: An array of one-dimensional array is known as the 2-dimensional array or 2D Array-like . We can understand it more clearly with the help of the following example: Initialization of 2-Dimensional Arrayint array[2][3]={ {3,2,5} , {9,5,4} }


 Index: 29
Question: Which types of arrays are always considered as linear arrays? 
CodeBlock:

Options:
0 . single-dimensional
1 . multi-dimensional
2 . both a and b
3 . none of the above
4 . 
Correct Answer: 0

Explanation: Single-dimensional arrays are always considered as linear arrays.

 Index: 30
Question: Which of the following can be considered as the object of an array?
CodeBlock:

Options:
0 . index of an array
1 . elements of the array
2 . functions of the array
3 . all of the above
4 . 
Correct Answer: 1

Explanation: The elements in the array are known as the objects of the array.

 Index: 31
Question: How many types of elements can an array store? 
CodeBlock:

Options:
0 . same types of elements
1 . char and int type
2 . only char types
3 . all of the above
4 . 
Correct Answer: 0

Explanation: An array can hold several elements except that all the data elements are of the same type.

 Index: 32
Question: Elements of a one-dimensional array are numbered as 0,1,2,3,4,5, and so on; these numbers are known as ____
CodeBlock:

Options:
0 . subscript of array
1 . members of array
2 . index values
3 . both a and c
4 . 
Correct Answer: 3

Explanation: The elements of one-dimensional array are indexed as 0,1,2,3,... and these numbers are also known as the index values or subscripts of the array.

 Index: 33
Question: Which of the following statement is true about the new and malloc?
CodeBlock:

Options:
0 . only i
1 . both i and ii
2 . i, ii, iii
3 . none of the above
4 . 
Correct Answer: 2

Explanation: All statements mentioned in the above question are completely true about the "malloc" and the "new." The "malloc" is a kind of function available in the C++ language, while the "new" is a type of operator that invokes the Constructor. 

 Index: 34
Question: Which of the following statement is true about the new and malloc?
CodeBlock:

Options:
0 . only ii
1 . both ii and iii
2 . only i
3 . none of the above
4 . 
Correct Answer: 0

Explanation: In object initialization of a class using the "new" keyword also involves a constructor call, while doing so with the "malloc" does not require any involvement of the constructor call. This is the main reason why the "new" is added explicitly in the C++ language. However, the "malloc" function is used to assign the memory to any specific pointer, so it assigns an equal amount of memory to the class size. At the same time, the "new" keyword involves the initialization, hence invokes the Constructor of that particular class.

 Index: 35
Question: Which of the following statement is correct about Virtual Inheritance?
CodeBlock:

Options:
0 . it is a technique to ensure that a private member of a base class can be accessed
1 . it is a technique to optimize the multiple inheritances
2 . it is a technique to avoid the multiple inheritances of the classes
3 . it is a c++ technique to avoid multiple copies of the base class into the derived or child classes
4 . 
Correct Answer: 3

Explanation: 

 Index: 36
Question: Which one of the following statements correctly refers to the Delete and Delete[] in C++ programming language?
CodeBlock:

Options:
0 . delete is syntactically correct although, if the delete[] is used, it will obtain an error.
1 . the "delete" is used for deleting the standard objects, while on the other hand, the "delete[]" is used to delete the pointer objects
2 . the "delete" is a type of keyword, whereas the "delete[]" is a type of identifier
3 . the "delete" is used for deleting a single standard object, whereas the "delete[]" is used for deleting an array of the multiple objects
4 . 
Correct Answer: 3

Explanation: The "Delete" is used with the single general object, while on the other hand, the "Delete[]" is used with the array of the multiple objects initiated with the new operator.

 Index: 37
Question: Consider the following given program and choose the most appropriate output from the given options:
CodeBlock:
#include <iostream>
using namespace std;
class A{
public:
	A(){
		cout<<"Constructor called\n";
	   }
	~A(){
		cout<<"Destructor called\n";
	    } 
};
int main(int argc, char const *argv[])
{
	A *a = new A[5];
	delete[] a;
	return 0;
}

Options:
0 . segmentation failure.
1 . error.
2 . the constructor will be invoked five times, and after that destructor will be invoked only once.
3 . the constructor will be invoked five times, and after that destructor will also be invoked five times.
4 . 
Correct Answer: 3

Explanation: As mentioned in the above-given program, five-pointer variables are initiated using the "new" keyword so that the Constructor will be invoked five times. In addition, the destructor "Delete[]" is used( that is used for deleting the group of the several objects) for terminating variables. Hence all of the variables will be terminated completely, and while terminating the variables, the destructor will be invoked five times.

 Index: 38
Question: Consider the following given program and choose the most appropriate output from the given options:
CodeBlock:
#include<iostream> 
using namespace std; 
class Base { 
public: 
	Base()	 
	{ cout<<"Constructing Base \n"; } 
	~Base() 
	{ cout<<"Destructing Base \n"; }	 
}; 
class Derived: public Base { 
public: 
	Derived()	 
	{ cout<<"Constructing Derived \n"; } 
	~Derived() 
	{ cout<<"Destructing Derived \n"; } 
}; 
 
int main(void) 
{ 
	Derived *d = new Derived(); 
	Base *b = d; 
	delete b; 
	return 0; 
}

Options:
0 . constructing base, constructing derived, destructing base, destructing derived
1 . constructing base, constructing derived, destructing base
2 . constructing base, constructing derived, destructing derived, destructing base
3 . none of the above
4 . 
Correct Answer: 1

Explanation: In the above-given program, the derived class's object is storing in the base class pointer; while the object is destroyed, the program has never invoked the destructor of the Derived class. Therefore, it shows that the object is not destroyed at all; hence, in this case, the program may also behave undesirably.

 Index: 39
Question: Which of the following can be considered as the correct syntax for declaring an array of pointers of integers that has a size of 10 in C++?
CodeBlock:

Options:
0 . int arr = new int[10];
1 . int *arr = new int*[10]
2 . int **arr = new int*[10];
3 . int *arr = new int[10];
4 . 
Correct Answer: 2

Explanation: To declare an array of integers' pointer, here we need to use the double-pointer array where every element is set of the pointer to the integers. Therefore the correct option is C.

 Index: 40
Question: Which of the following can be considered as the members that can be inherited but not accessible in any class?
CodeBlock:

Options:
0 . public
1 . protected
2 . private
3 . both a and c
4 . 
Correct Answer: 2

Explanation: The "Private" member of a class can be inherited by the child class. Still, the child class cannot access them (Or we can say that they are not accessible from the child class). 

 Index: 41
Question: Which of the following can be used to create an abstract class in the C++ programming language?
CodeBlock:

Options:
0 . by using the pure virtual function in the class
1 . by declaring a virtual function in the base class
2 . by declaring the virtual keyword afterward, the class declaration
3 . none of the above
4 . 
Correct Answer: 0

Explanation: A class must contain at least one declaration of the pure virtual function in itself to be called an abstract class. Therefore to make an abstract class, one has to declare at least one pure virtual function in that class.

 Index: 42
Question: Which of the following statements is correct about the class?
CodeBlock:

Options:
0 . an object is an instance of its class
1 . a class is an instance of its object
2 . an object is the instance of the data type of that class
3 . both a and c
4 . 
Correct Answer: 0

Explanation: Generally, an object is an instance of a class, e.g., an object represents the class.

 Index: 43
Question: Which of the following statements is correct about the friend function in C++ programming language?
CodeBlock:

Options:
0 . a friend function is able to access private members of a class
1 . a friend function can access the private members of a class
2 . a friend function is able to access the public members of a class
3 . all of the above
4 . 
Correct Answer: 3

Explanation: A friend function can access any member of a class without caring about the type of member it contains, such as public, private, and protected.

 Index: 44
Question: Which of the following statement is not true about C++?
CodeBlock:

Options:
0 . members of a class are public by default
1 . a class cannot have the private members
2 . a structure can have the member functions
3 . all of the above
4 . 
Correct Answer: 2

Explanation: In C, structures are not allowed to have member functions; while on the other hand, C++ allows the structure to have the member functions. Members of the class are generally private by default, and those of the structures are public. So it is a completely false statement that classes can not private members. 

 Index: 45
Question: Which of the following given statement is completely true?
CodeBlock:

Options:
0 . only ii
1 . only i
2 . both i & ii
3 . none of the above
4 . 
Correct Answer: 1

Explanation: In a procedure programming language such as C, we do not have the concept of Polymorphism, so all function calls are resolved at the compile-time while, on the other hand, In an Object-Oriented language, through the concept of Polymorphism, all function calls cannot be resolved at the compile-time.

 Index: 46
Question: Which one of the following cannot be used with the virtual keyword?
CodeBlock:

Options:
0 . constructor
1 . destructor
2 . member function
3 . none of the above
4 . 
Correct Answer: 0

Explanation: In C++, we cannot use the virtual keyword with the Constructor because constructors are generally defined to initialize the object of a specific class; hence no other class requires the other class's object.

 Index: 47
Question: Which of the following is used for implementing the late binding?
CodeBlock:

Options:
0 . operator functions
1 . constant functions
2 . virtual functions
3 . both a and b
4 . 
Correct Answer: 2

Explanation: A virtual function can be used for implementing the concept of late binding. For example - Binding the actual functions to their corresponding calls.

 Index: 48
Question: Which of the following statements supports that reusable code should be one of the desirable features of any language?
CodeBlock:

Options:
0 . it helps in reducing the maintenance cost
1 . it helps in reducing the testing time
2 . it helps in reducing both the maintenance time and testing time
3 . it helps in reducing the compile time
4 . 
Correct Answer: 2

Explanation: While reusing the existing code, we are not required to test/check that code, again and again, because it was already tested while it was written for the very first time. So the reusing the code defiantly helps in reducing the maintenance and testing time.While reusing the existing code, the compile-time most likely to be increased or remain the same, and it is obvious because we use the existing code in our program to save our time( or to include any specific functionality) by which the size of the overall program gets grows which is natural.

 Index: 49
Question: Which of the following statement is correct about the C++ programming language?
CodeBlock:

Options:
0 . in c++, both the static and dynamic type checking are allowed
1 . in c++, member function are allowed to be of the type canst
2 . in c++, dynamic checking is allowed
3 . none of the above
4 . 
Correct Answer: 0

Explanation: In C++, both types of static and dynamic checking are allowed.

 Index: 50
Question: Which of the following is not a kind of inheritance?
CodeBlock:

Options:
0 . distributed
1 . multiple
2 . multi-level
3 . hierarchal
4 . 
Correct Answer: 0

Explanation: Among the above options, Distributed is only, which is not a type of inheritance, while Multiple, Multi-level, and the Hierarchal are the types of inheritance.

 Index: 51
Question: What will happen if "In a C++ program a class has no name"?
CodeBlock:

Options:
0 . it is not even allowed in c++
1 . it will not have the constructor
2 . it will not have the destructor
3 . both b and c
4 . 
Correct Answer: 2

Explanation: In the C++ program, if we use a class without assigning a name. As a result, it will not be going to have a destructor, but it will have the object. To understand it in more detail, consider the following program:Program#include 
using namespace std;
class
{
    public:
	void func()
        {
		cout<<"Hello world";
	}
}a;
int main(int argc, char const *argv[])
{
	a.func();
	return 0;
}


 Index: 52
Question: Which type of approach is used by the C++ language?
CodeBlock:

Options:
0 . right to left
1 . left to right
2 . top to bottom
3 . bottom-up
4 . 
Correct Answer: 3

Explanation: Generally, C++ uses the Bottom-up approach while other programming languages like C use the top-down approach.

 Index: 53
Question: Which of the following concept refers to adding new components to the program at the run time?
CodeBlock:

Options:
0 . dynamic loading
1 . dynamic binding
2 . data hiding
3 . both a & b
4 . 
Correct Answer: 2

Explanation: The dynamic loading is referred to as the concept of adding a new component to the program as it runs. 

 Index: 54
Question: How can one implement the compile-time Polymorphism in the C++ programming language?
CodeBlock:

Options:
0 . by using the template
1 . by using the concepts of inheritance
2 . by using both the virtual functions and inheritance
3 . by using only the virtual functions
4 . 
Correct Answer: 0

Explanation: One can easily implement the Compile-time Polymorphism using the Template.

 Index: 55
Question: How can one implement the run-time Polymorphism in the C++ programming language?
CodeBlock:

Options:
0 . by using the template
1 . by using the concepts of inheritance
2 . by using both the virtual functions and inheritance
3 . by using only the virtual functions
4 . 
Correct Answer: 0

Explanation: C

 Index: 56
Question: Which of the following offers a programmer the facility of using a specific class object into other classes?
CodeBlock:

Options:
0 . polymorphism
1 . abstraction
2 . inheritance
3 . composition
4 . 
Correct Answer: 3

Explanation: The composition is referred to as the concept of using objects of a specific class into several other classes.

 Index: 57
Question: Which one of the following cannot be a friend in C++ languages?
CodeBlock:

Options:
0 . a class
1 . a function
2 . an object
3 . none of the above
4 . 
Correct Answer: 2

Explanation: In general, an object of any class cannot be a friend of the same and any other class as well. However, there are some functions, operator, and classes which can be made a friend.

 Index: 58
Question: How are the references different from the pointer?
CodeBlock:

Options:
0 . a reference cannot be modified once it initialized
1 . there is no need of an extra operator for dereferencing of a reference
2 . a reference cannot be null
3 . all of the above
4 . 
Correct Answer: 3

Explanation: These are some basic reasons why the references are far different from the pointers.In the case of pointers "*" operator is required for dereferencing the value contain by it. However, the reference does not need any type of operator for deference.A Reference cannot be modified once it is initialized, but it is possible to do so in the case of a pointer.A pointer can be made Null, whereas a reference cannot be NULL.

 Index: 59
Question: Among the following given options, which can be considered as a member of a class?
CodeBlock:

Options:
0 . class variable
1 . member variable
2 . class functions
3 . both a and b
4 . 
Correct Answer: 1

Explanation: Generally, the functions of any class are also considered as the member function of that class.

 Index: 60
Question: Which of the following refers to the wrapping of data and its functionality into a single individual entity?
CodeBlock:

Options:
0 . modularity
1 . abstraction
2 . encapsulation
3 . none of the above
4 . 
Correct Answer: 2

Explanation: In C++, the property of wrapping the data and its functionality into a single entity is known as Encapsulation ( e.g., Classes).

 Index: 61
Question: Which of the following refers to using the existing code instead of rewriting it?
CodeBlock:

Options:
0 . inheritance
1 . encapsulation
2 . abstraction
3 . both a and b
4 . 
Correct Answer: 0

Explanation: With the help of the inheritance concept, one can use existing code instead of rewriting. We can do this by inheriting the properties of pre-written code in other parts of the code blocks. Therefore the user is not required to write the same code repeatedly.

 Index: 62
Question: Among the following, which shows the Multiple inheritances? 
CodeBlock:

Options:
0 . x,y->z
1 . x->y->z
2 . x->y;x->z
3 . none of the above
4 . 
Correct Answer: 0

Explanation: In multiple inheritances, a single class can inherit properties form more than one base class.

 Index: 63
Question: Which of the following statements is true about the C++ programming language?
CodeBlock:

Options:
0 . c++ is an object-oriented programming language
1 . c++ is a procedural programming language
2 . c++ is a functional programming language
3 . c++ is both procedural and object-oriented language
4 . 
Correct Answer: 3

Explanation: C++ is a type of programming language which supports both the procedural ( or step by step instructions) and object-oriented through the concept of classes. 

 Index: 64
Question: Among the following, which statement is correct about the Modularity?
CodeBlock:

Options:
0 . modularity means hiding the parts of the program
1 . modularity refers to dividing a program into subsequent small modules or independent parts
2 . it refers to overloading the program's part
3 . modularity refers to wrapping the data and its functionality into a single entity
4 . 
Correct Answer: 1

Explanation: Modularity refers to dividing a program into small independent code blocks or modules so that they can be easily called anywhere in the entire program where it is required. The concept of Modularity is very efficient and helpful for developers because it makes the program well structured and easy to understand. Hence the correct option is D.

 Index: 65
Question: Read the following program carefully and find out which concept from the given options is not used or missing in the following program?
CodeBlock:
class A
{
    int x;
    public:
    void print(){cout<<"hello"<<x;}
}
 
class B: public A
{
    int y;
    public:
    void assign(int a){y = a;}
}

Options:
0 . polymorphism
1 . encapsulation
2 . inheritance
3 . abstraction
4 . 
Correct Answer: 0

Explanation: As we can see in the above-given program, the variables X and Y both are private members, which means they both are hidden from the outside world of the class, so here the concept of abstraction is used.The other data members and their corresponding functions are stored in an individual class, so here the concept of Encapsulation is also used. In addition, Class B is derived from Class A, which means the concept of inheritance is used as well, but still, we didn't find and an overloaded function in any of the classes. Therefore the concept of Polymorphism is missing or not used in the given program.

]