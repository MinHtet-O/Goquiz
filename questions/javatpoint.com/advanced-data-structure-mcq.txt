&[Index: 0
Question: What is the load factor for an open addressing technique?
CodeBlock:

Options:
0 . 1
1 . 0
2 . 5
3 . 5
4 . 
Correct Answer: 2

Explanation: 

 Index: 1
Question: For the given hash table, in what location will the element 58 be hashed using quadratic probing?
CodeBlock:

Options:
0 . 1
1 . 2
2 . 7
3 . 6
4 . 
Correct Answer: 1

Explanation: 

 Index: 2
Question: Which one of the following data structures are preferred in database-system implementation?
CodeBlock:

Options:
0 . avl tree
1 . b-tree
2 . b+ - tree
3 . splay tree
4 . 
Correct Answer: 2

Explanation: 

 Index: 3
Question: Consider a hash table of size seven, with starting index zero, and a hash function (3x + 4)mod7. Assuming the
CodeBlock:

Options:
0 . 8, _, _, _, _, _, 10
1 . 1, 8, 10, _, _, _, 3
2 . 1, _, _, _, _, _,3
3 . 1, 10, 8, _, _, _, 3
4 . 
Correct Answer: 1

Explanation: 

 Index: 4
Question: What maximum difference in heights between the leafs of a AVL tree is possible?
CodeBlock:

Options:
0 . log(n) where n is the number of nodes
1 . n where n is the number of nodes
2 . 0 or 1
3 . atmost 1
4 . 
Correct Answer: 0

Explanation: 

 Index: 5
Question: How can you save memory when storing color information in Red-Black tree?
CodeBlock:

Options:
0 . using least significant bit of one of the pointers in the node for color information
1 . using another array with colors of each node
2 . storing color information in the node structure
3 . using negative and positive numbering
4 . 
Correct Answer: 0

Explanation: 

 Index: 6
Question: What are the worst case and average case complexities of a binary search tree?
CodeBlock:

Options:
0 . o(n), o(n)
1 . o(log n), o(log n)
2 . o(logn), o(n)
3 . o(n), o(log n)
4 . 
Correct Answer: 3

Explanation: 

 Index: 7
Question: Which of the following is the efficient data structure for searching words in dictionaries?
CodeBlock:

Options:
0 . bst
1 . linked list
2 . balanced bst
3 . trie
4 . 
Correct Answer: 3

Explanation: 

 Index: 8
Question: In the following given hash table, use linear probing to find the location of 49.
CodeBlock:

Options:
0 . 7
1 . 6
2 . 2
3 . 0
4 . 
Correct Answer: 3

Explanation: 

 Index: 9
Question: When we have red-black trees and AVL trees that can perform most of operations in logarithmic times, then what is the need for splay trees?
CodeBlock:

Options:
0 . no there is no special usage
1 . in real time it is estimated that 80% access is only to 20% data, hence most used ones must be easily available
2 . redblack and avl are not upto mark
3 . they are just another type of self-balancing binary search trees
4 . 
Correct Answer: 1

Explanation: 

 Index: 10
Question: We are given a set of n distinct elements and an unlabelled binary tree with n nodes. In how many ways can we populate the tree with the given set so that it becomes a binary search tree?
CodeBlock:

Options:
0 . 0
1 . 1
2 . n!
3 . 1/n+1
4 . 
Correct Answer: 1

Explanation: 

 Index: 11
Question: Which of the following is true?
CodeBlock:

Options:
0 . larger the order of b-tree, less frequently the split occurs
1 . larger the order of b-tree, more frequently the split occurs
2 . smaller the order of b-tree, more frequently the split occurs
3 . smaller the order of b-tree, less frequently the split occurs
4 . 
Correct Answer: 0

Explanation: 

 Index: 12
Question: If h is chosen from a universal collection of hash functions and is used to hash n keys into a table of size m,
CodeBlock:

Options:
0 . 1
1 . 1/n
2 . 1/m
3 . n/m
4 . 
Correct Answer: 0

Explanation: 

 Index: 13
Question: Five node splitting operations occurred when an entry is inserted into a B-tree. Then how many nodes are written?
CodeBlock:

Options:
0 . 14
1 . 7
2 . 11
3 . 5
4 . 
Correct Answer: 2

Explanation: 

 Index: 14
Question: A dictionary has a set of ------- and each key has a single associated value.
CodeBlock:

Options:
0 . keys
1 . index
2 . both keys and index
3 . none of the above
4 . 
Correct Answer: 0

Explanation: 

 Index: 15
Question: Consider a hash table of size seven, with starting index zero, and a hash function (3x + 4)mod7. Assuming the hash table is initially empty, which of the following is the contents of the table when the sequence 1, 3, 8, 10 is inserted into the table using closed hashing? Note that '_' denotes an empty location in the table.
CodeBlock:

Options:
0 . 8 - - - - - 10
1 . 1 8 10 - - - 3
2 . 1 - - - - - 3
3 . 1 10 8 - - - 3
4 . 
Correct Answer: 1

Explanation: 

 Index: 16
Question: Consider the below left-left rotation pseudo code where the node contains value pointers to left, right child nodes and a height value and Height() function returns height value stored at a particular node.
CodeBlock:

Options:
0 . height(w-left), x-height
1 . height(w-right), x-height
2 . height(w-left), x
3 . height(w-left)
4 . 
Correct Answer: 0

Explanation: 

 Index: 17
Question: Which hashing technique is free from clustering?
CodeBlock:

Options:
0 . linear probing
1 . double hashing
2 . quadratic hashing
3 . rehashing
4 . 
Correct Answer: 1

Explanation: 

 Index: 18
Question: We are given a set of n distinct elements and an unlabelled binary tree with n nodes. In how many ways can we populate the tree with the given set so that it becomes a binary search tree?
CodeBlock:

Options:
0 . 0
1 . 1
2 . n!
3 . (1/(n+1)).2ncn
4 . 
Correct Answer: 1

Explanation: 

 Index: 19
Question: Which hash function is used in the division method?
CodeBlock:

Options:
0 . h(k) = k/m
1 . h(k) = k mod m
2 . h(k) = m/k
3 . h(k) = m mod k
4 . 
Correct Answer: 1

Explanation: 

 Index: 20
Question: When it would be optimal to prefer Red-black trees over AVL trees?
CodeBlock:

Options:
0 . when there are more insertions or deletions
1 . when more search is needed
2 . when tree must be balanced
3 . when log(nodes) time complexity is needed
4 . 
Correct Answer: 0

Explanation: 

 Index: 21
Question: In the balanced binary tree in Fig. given below, how many nodes will become unbalanced when a node is inserted as a child of the node "g"? 
CodeBlock:

Options:
0 . 1
1 . 3
2 . 4
3 . 7
4 . 
Correct Answer: 1

Explanation: 

 Index: 22
Question: What is the special property of red-black trees and what root should always be?
CodeBlock:

Options:
0 . a color which is either red or black and root should always be black color only
1 . height of the tree
2 . a color which is either green or black
3 . pointer to next node
4 . 
Correct Answer: 0

Explanation: 

 Index: 23
Question: What is the disadvantage of using splay trees?
CodeBlock:

Options:
0 . height of a splay tree can be linear when accessing elements in non-decreasing order
1 . splay operations are difficult
2 . splay tree performs unnecessary splay when a node is only being read
3 . no significant disadvantage
4 . 
Correct Answer: 0

Explanation: 

 Index: 24
Question: Which of the following data structure can provide efficient searching of the elements?
CodeBlock:

Options:
0 . unordered lists
1 . binary search tree
2 . treap
3 . 2-3 tree
4 . 
Correct Answer: 3

Explanation: 

 Index: 26
Question: Given an empty AVL tree, how would you construct AVL tree when a set of numbers are given without performing any rotations?
CodeBlock:

Options:
0 . just build the tree with the given input
1 . find the median of the set of elements given, make it as root and construct the tree
2 . use trial and error
3 . use dynamic programming to build the tree
4 . 
Correct Answer: 1

Explanation: 

 Index: 27
Question: If several elements are competing for the same bucket in the hash table, what is it called? 
CodeBlock:

Options:
0 . diffusion
1 . replication
2 . collision
3 . duplication
4 . 
Correct Answer: 2

Explanation: 

 Index: 28
Question: Which of the following is not the self balancing binary search tree?
CodeBlock:

Options:
0 . avl tree
1 . red - black tree
2 . splay tree
3 . none of the above
4 . 
Correct Answer: 3

Explanation: 

 Index: 29
Question: What is the output of the following piece of code?
CodeBlock:
public class array
{
public static void main(String args[])
{
int []arr = {1,2,3,4,5};
System.out.println(arr[2]);
System.out.println(arr[4]);
}
}

Options:
0 . 3 and 5
1 . 5 and 3
2 . 2 and 4
3 . 4 and 2
4 . 
Correct Answer: 0

Explanation: 

 Index: 30
Question: What is the maximum height of any AVL-tree with 7 nodes? Assume that the height of a tree with a single node is 0.
CodeBlock:

Options:
0 . 2
1 . 3
2 . 4
3 . 5
4 . 
Correct Answer: 1

Explanation: 

 Index: 31
Question: What output does the below pseudo code produces?
CodeBlock:
 Tree_node function(Tree_node x)
 {
 Tree_node y = x.left;
 x.left = y.right;
 y.right = x;
 return y;
 }

Options:
0 . right rotation of subtree
1 . left rotation of subtree
2 . zig-zag operation
3 . zig-zig operation
4 . 
Correct Answer: 0

Explanation: 

 Index: 32
Question: What can be the value of m in the division method?
CodeBlock:

Options:
0 . any prime number
1 . any even number
2 . 2p - 1
3 . 2p
4 . 
Correct Answer: 0

Explanation: 

 Index: 33
Question: What does the following piece of code do?
CodeBlock:
public void func(Tree root)
{
func(root.left());
func(root.right());
System.out.println(root.data());
}

Options:
0 . preorder traversal
1 . inorder traversal
2 . postorder traversal
3 . level order traversal
4 . 
Correct Answer: 2

Explanation: 

 Index: 34
Question: At what position the number 72 gets inserted in the following table?
CodeBlock:

Options:
0 . 3
1 . 10
2 . 7
3 . 6
4 . 
Correct Answer: 3

Explanation: 

 Index: 35
Question: To restore the AVL property after inserting an element, we start at the insertion point and move towards root of that tree. is this statement true?
CodeBlock:

Options:
0 . true
1 . false
2 . 
3 . 
4 . 
Correct Answer: 0

Explanation: 

 Index: 36
Question: Why we need to a binary tree which is height balanced?
CodeBlock:

Options:
0 . to avoid formation of skew trees
1 . to save memory
2 . to attain faster memory access
3 . to simplify storing
4 . 
Correct Answer: 0

Explanation: 

 Index: 37
Question: What are the operations that could be performed in O(logn) time complexity by red-black tree?
CodeBlock:

Options:
0 . insertion, deletion, finding predecessor, successor
1 . only insertion
2 . only finding predecessor, successor
3 . for sorting
4 . 
Correct Answer: 0

Explanation: 

 Index: 38
Question: A dictionary is also called
CodeBlock:

Options:
0 . a hash
1 . a map
2 . a hashmap
3 . all of above
4 . 
Correct Answer: 3

Explanation: 

 Index: 39
Question: Which one of the following hash functions on integers will distribute keys most uniformly over 10 buckets numbered 0 to 9 for i ranging from 0 to 2020? 
CodeBlock:

Options:
0 . h(i)=i*i mod 10
1 . h(i)=i*i*i mod 10
2 . h(i)=(11∗i*i) mod 10
3 . h(i)=(12∗i) mod 10
4 . 
Correct Answer: 1

Explanation: 

]